/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.MalformedURLException;
import java.net.Socket;
import java.net.URL;
import java.util.Arrays;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.border.Border;
import lyrics.SongLyricsResponse;
import model.artist.Artist;
import model.artist.GeniusArtistApiResponse;
import model.Hit;
import model.PrimaryArtist;
import model.song.Media;
import model.song.Song;
import model.song.SongAPIResponse;

/**
 *
 * @author MINHNHAT
 */
public class frmSong extends javax.swing.JFrame {

    private static Hit hit;

    /**
     * Creates new form Option
     *
     * @param hit
     */
    public frmSong(Hit hit) {
        initComponents();
        styleFormAndButton();
        loadSong(hit);
        frmSong.hit = hit;
    }

    private void loadSong(Hit hit) {
        try {
            URL imageUrl = new URL(hit.getResult().getSong_art_image_url());
            ImageIcon imageIcon = new ImageIcon(imageUrl);

            Image scaledImage = imageIcon.getImage().getScaledInstance(lbThumbNail.getWidth(), lbThumbNail.getHeight(), Image.SCALE_SMOOTH);

            ImageIcon scaledImageIcon = new ImageIcon(scaledImage);
            lbThumbNail.setIcon(scaledImageIcon);
            lbSongName.setText(hit.getResult().getFull_title());
        } catch (MalformedURLException ex) {
            System.out.println("Load image fail");
        }
    }
    
    private void styleFormAndButton() {
        btnArtistOption.setFont(new Font("Helvetica", Font.PLAIN, 18));
        btnArtistOption.setForeground(Color.WHITE);
        btnArtistOption.setBackground(new Color(52, 152, 219));
        Border buttonBorder = BorderFactory.createLineBorder(Color.BLACK, 2);
        btnArtistOption.setBorder(buttonBorder);

        btnLyricsOption.setFont(new Font("Helvetica", Font.PLAIN, 18));
        btnLyricsOption.setForeground(Color.WHITE);
        btnLyricsOption.setBackground(new Color(46, 204, 113));
        btnLyricsOption.setBorder(buttonBorder);

        btnOpenWeb.setFont(new Font("Helvetica", Font.PLAIN, 18));
        btnOpenWeb.setForeground(Color.WHITE);
        btnOpenWeb.setBackground(new Color(113, 204, 46));
        btnOpenWeb.setBorder(buttonBorder);
        // Customize the form background color
        getContentPane().setBackground(new Color(236, 240, 241));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnArtistOption = new javax.swing.JButton();
        btnLyricsOption = new javax.swing.JButton();
        lbThumbNail = new javax.swing.JLabel();
        lbSongName = new javax.swing.JLabel();
        btnOpenWeb = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLyrics = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnArtistOption.setText("Thông tin nghệ sĩ");
        btnArtistOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArtistOptionActionPerformed(evt);
            }
        });

        btnLyricsOption.setText("Lời bài hát");
        btnLyricsOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLyricsOptionActionPerformed(evt);
            }
        });

        btnOpenWeb.setText("Mở video");
        btnOpenWeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenWebActionPerformed(evt);
            }
        });

        txtLyrics.setColumns(20);
        txtLyrics.setLineWrap(true);
        txtLyrics.setRows(5);
        jScrollPane1.setViewportView(txtLyrics);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("LỜI BÀI HÁT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbThumbNail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnArtistOption, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(lbSongName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnOpenWeb, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLyricsOption, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addGap(85, 85, 85))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(lbSongName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbThumbNail, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnArtistOption, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLyricsOption, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpenWeb, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        jLabel1.getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenWebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenWebActionPerformed
        String result = sendRequestToServer("song" + "@" + hit.getResult().getId());
        SongAPIResponse song = new Gson().fromJson(result, SongAPIResponse.class);
        System.out.println("Ket qua bai hat tra ve ::" + result);
        GeniusWebView gwv = new GeniusWebView();

        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                List<Media> listMedia = song.getResponse().getSong().getMedia();
                for (Media me : listMedia) {
                    if (me.getProvider().equals("youtube")) {
                        gwv.buildBroswer(me.getUrl());
                    }
                }
                return null;
            }
        };
        worker.execute();

    }//GEN-LAST:event_btnOpenWebActionPerformed
    private String sendRequestToServer(String request) {
        try (Socket socket = new Socket("localhost", 12346);) {

            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
            out.println(request);
            String respone = in.readLine();
            socket.close();
            return respone;
        } catch (IOException ex) {
            return "SocketError" + ex.toString();
        }
    }
    private void btnLyricsOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLyricsOptionActionPerformed
        String result = sendRequestToServer("lyrics" + "@" + hit.getResult().getId());
        SongLyricsResponse responeLyrics = new Gson().fromJson(result, SongLyricsResponse.class);
        if (!result.equals("Fail")) {
            String lyrics = responeLyrics.getLyrics().getLyricsContent().getBody().getHtml();
            String cleanedLyrics = lyrics.replaceAll("<[^>]*>", "");
            txtLyrics.setText(cleanedLyrics);
        } else {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra!", "Lỗi", 0);
        }
    }//GEN-LAST:event_btnLyricsOptionActionPerformed
   
    private void btnArtistOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArtistOptionActionPerformed
        PrimaryArtist primaryArtist=hit.getResult().getPrimary_artist();
        String result = sendRequestToServer("artist" + "@" + primaryArtist.getId());
        Gson gson= new GsonBuilder().setPrettyPrinting().create();
        Artist artist=gson.fromJson(result, Artist.class);
        System.out.println(artist.getImageUrl());
        frmArtist frm=new frmArtist(artist);
        frm.setVisible(true);
        
    }//GEN-LAST:event_btnArtistOptionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmSong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmSong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmSong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmSong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmSong(hit).setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArtistOption;
    private javax.swing.JButton btnLyricsOption;
    private javax.swing.JButton btnOpenWeb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbSongName;
    private javax.swing.JLabel lbThumbNail;
    private javax.swing.JTextArea txtLyrics;
    // End of variables declaration//GEN-END:variables
}
